package com.kh.test.break_continue;

import java.util.Scanner;

public class Test1 {

	public static void main(String[] args) {
		
		Test1 t = new Test1();
//		t.test1();
		t.test2();

	}
	
	/** 
	 * - 메소드명 : public void test2()
	
    		2) 사용자로부터 정수를 두개 입력 받아서, 작은 정수에서 큰 정수까지 홀수의 합을 구하세요.
       
        	Tip. 큰수/작은수에 해당하는 변수를 사용할 것.

        		결과:
        		정수를 하나 입력하세요. => 100
        		다른 정수를 하나 입력하세요. => 1
        		====================
        		1부터 100까지의 홀수의 합은 2500입니다.
 */

	
	public void test2() {
		
		/*
		 * 문제를 보고 연상하는 과정에 대한 연습
		 * 
		 * 1) 사용자로부터 정수 두 개를 입력받음 -> Scanner -> 정수이므로 int
		 * 2) 작은 정수에서 큰 정수까지 홀수의 합 ...Tip. 큰수/작은수에 해당하는 변수를 사용할 것.
		 * 3) 입력받은 정수 2개, 최소값, 최대값으로 분류 및 최종 홀수 덧셈 결과값 필요
		 * 4) 그런데.. 둘이 바뀌어도 답 똑같지 않나? (1~7까지 더해도, 7~1까지 더해도 같지 않나? *질문하기)
		 *
		 */
		
		Scanner sc = new Scanner(System.in);
		System.out.print("정수를 하나 입력하세요. => ");
		int x1 = sc.nextInt();
		System.out.print("다른 정수를 하나 입력하세요. => ");
		int x2 = sc.nextInt();
		
		// x1 > x2 ? x2부터 x1까지 홀수의 합을 구해야 함
		// x1 < x2 ? x1부터 x2까지 홀수의 합을 구해야 함

			if(x1 > x2) {  // 만약에 x1이 x2보다 크다면? // ex 7, 1입력받음)
					
				int x3 = x1; // int x3 = 7로 하나 따로 설정
				x1 = x2;	 // x1(7) = x2(1)
				x2 = x3;	 // x2(1) = x3(7)
					//이렇게 하면 위에서 아래로 읽어 내려가는 특성 상 x2는 7이 되고, x1은 1이 되어 서로 자리가 바뀜
			}
		
		int sum = 0; // 연산 결과로 쓸 값 선언
		int min = x1; // 헷갈리니까 x1은 최소값인 min으로
		int max = x2; // x2는 최대값인 max로 변경
		
			System.out.println(sum + "/" + min); // 처음 값 얼마진지 확인하려고
			
			while(true) {
				
				if(min % 2 != 0) { // min이 홀수이면 가져가고 짝수이면 버려
					sum += min;
					System.out.println(min + "/" + sum); // 중간 과정 확인용
				}			
				if (min == max) { // 연산을 하다 최소값, 최대값이 같아지면 멈춘다
					break;
				}			
				min++; //min 값은 지속적으로 +1
			}
		
		System.out.println("====================");
		System.out.println(x1 + "부터 " + x2 + "까지 홀수의 합은 " + sum + "입니다.");
		
		
	}

/**
	[문제 1]
			- 클래스 : com.kh.test.break_continue.Test1.java
			- 메소드명 : public void test1()
			    1) 정수 한 개를 입력 받아, 1부터 입력 받은 정수까지의 홀수의 곱을 출력하세요.
			- 메소드명 : public void test2()
			    2) 사용자로부터 정수를 두개 입력 받아서, 작은 정수에서 큰 정수까지 홀수의 합을 구하세요.
			        Tip. 큰수/작은수에 해당하는 변수를 사용할 것.
			     
			        결과:
			        정수를 하나 입력하세요. => 100
			        다른 정수를 하나 입력하세요. => 1
			        ====================
			        1부터 100까지의 홀수의 합은 2500입니다.
*/			        

	public void test1() {
		
		/*
		 * 문제를 보고 연상하는 과정에 대한 연습
		 * 
		 * 1) 사용자로부터 정수 한 개를 입력받음 -> Scanner -> 정수이므로 int
		 * 2) 1부터 입력받은 정수까지의 홀수의 곱 -> 반복문이 멈춰야 하는 조건은 (1 ==입력받은 정수(x))까지
		 * 3) 입력받은 정수, 계산식에 사용될 i값, 결과인 sum이 필요할 것으로 예상
		 *
		 */
		
		Scanner sc = new Scanner(System.in); // 사용자로부터 숫자를 입력받아야 함
		System.out.print("정수 입력 > ");   // 정수를 입력만 받고, 곱한 결과는 나중에 출력
		int x = sc.nextInt(); // 입력받은 정수의 값을 x에 저장  *니콜니콜 쌤쌤은 같다는 뜻이 아니라, 우변을 좌변에 대입하라
		
		int i = 1; // 조건식에 들어갈 i의 값 선언
		int sum = 1; // 곱하기 결과 값 sum 선언
		while(true) { //이 조건을 트루로 설정해 while이 무한정 돌 수 있도록 한다.
			
			if(i % 2 != 0) {
				sum = sum * i; //i는 계속 증가시켜 들어가는 재료이고, 곱한 결과가 sum으로 생각하기
				System.out.println(sum + "/" + i); //과정을 보기 위한 중간 출력 (생략 가능)
				
				/* 1턴 : i=1,sum=1이었다, 나머지 홀수이므로 채용 후 sum(1)=sum(1)*i(1) = sum(1), i++ = 2됨
				 * 2턴 : 조건에서 false(짝수), 탈락 i++ = 3됨
				 * 3턴 : i=3,sum=1이었다, 나머지 홀수이므로 채용 후 sum(1)=sum(1)*i(3) = sum(3), i++ = 4됨
				 * 4턴 : 조건에서 false(짝수), 탈락 i++ = 5됨
				 * 5턴 : i=5,sum=3이었다, 나머지 홀수이므로 채용 후 sum(3)=sun(3)*i(5) = sum(15), i++ = 6됨
				 * 6턴 : 조건에서 false(짝수), 탈락 i++ = 7됨
				 * 7턴 : i=7,sum=15이었다, 나머지 홀수이므로 채용 후 sum(15)=sum(15)*i(7) = sum(105), i++ = 8됨
				 * ..
				 * 지속적으로 반복 가능, 그리고 내가 약한 연상 과정이므로 많은 연습 필요
				 */
			}
			
			if(i == x) { // 중지 조건 작성 후 아래에 브레이크(이 블럭에서 빠져나가라)
				break;	 
			}
			
			i++; // i의 값은 계속 증가를 해야 하나, while문 안에서 if로 나온 결과값에 더해져야 함
		}
		
		System.out.println("1부터 입력하신 정수까지의 홀수를 곱한 값은 " + sum + "입니다.");
		
	}
	
}
